<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-2.5.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/dalpractice?createDatabaseIfNotExist=true">
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean> -->


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<value>jdbc:derby:dalpractice;create=true</value>
		</property>
		<property name="username">
			<value>opensource</value>
		</property>
		<property name="password">
			<value>opensource</value>
		</property>
	</bean>



	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="dataSourceTransactionManager" />
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	    <property name="mappingResources">
			<list>
				<value>hbm/Custom.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.DerbyDialect 
                </prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.use_get_generated_keys">true</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateCustomDao" class="org.tinygroup.dalpractice.hibernate.HibernateCustomDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<!-- 此处应注入ibatis配置文件，而非sqlMap文件，否则会出现“there is no statement.....异常” -->
		<property name="configLocation">
			<value>classpath:sqlmap/sqlmap.xml</value>
		</property>
	</bean>

	<bean id="ibatisCustomDao" class="org.tinygroup.dalpractice.ibatis.IbatisCustomDao">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="spring" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.DerbyDialect" />
			</bean>
		</property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
	</bean>
	
	<bean id="jpaCustomDaoTarget" class="org.tinygroup.dalpractice.jpa.JpaCustomDao">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
    <bean id="jpaCustomDao"  
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">  
        <property name="transactionManager" ref="transactionManager" />  
        <property name="target" ref="jpaCustomDaoTarget" />  
        <property name="transactionAttributes">  
            <props>  
                <prop key="save*">PROPAGATION_REQUIRED</prop>  
                <prop key="del*">PROPAGATION_REQUIRED</prop>  
                <prop key="update*">PROPAGATION_REQUIRED</prop>  
                <prop key="create*">PROPAGATION_REQUIRED</prop>  
                <prop key="add*">PROPAGATION_REQUIRED</prop>  
                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>  
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>  
                <prop key="*">PROPAGATION_REQUIRED</prop>  
            </props>  
        </property>  
    </bean>  
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
        <property name="entityManagerFactory" ref="entityManagerFactory" />  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <bean id="dslSession" class="org.tinygroup.jdbctemplatedslsession.SimpleDslSession"> 
      <constructor-arg index="0" ref="dataSource"></constructor-arg> 
    </bean> 
    
    <bean id="tinyDslCustomDao" class="org.tinygroup.dalpractice.tinydsl.TinyDslCustomDao">
		<property name="dslSession" ref="dslSession" />
	</bean>
	 <bean id="dslCustomDao" class="org.tinygroup.dalpractice.tinydsl.DslCustomDao">
		<property name="dslSession" ref="dslSession" />
	</bean>
    

</beans>
